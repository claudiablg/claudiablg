#
# reference: https://docs.github.com/en/actions/reference/workflow-syntax-for-github-actions
# see: https://github.com/actions/cache/issues/459
#
name: build

on: [push]

jobs:
  #
  # Install dependencies with yarn, and save the node_modules
  #
  install-dependencies:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [14.x]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}

    #
    # detect what has changed (we need this later on)
    #
    - uses: dorny/paths-filter@v2
      id: filter
      with:
        list-files: 'json'
        filters: |
          packages:
            - 'packages/**'

    #
    # restore modified time of files via git-restore-mtime
    #
    - name: Restore mtime for git checkout
      run: sudo apt install git-restore-mtime && sudo curl -o /usr/lib/git-core/git-restore-mtime https://raw.githubusercontent.com/MestreLion/git-tools/v2020.09/git-restore-mtime && git restore-mtime

    #
    # Cache node_modules, and ts build output
    #
    - name: Setup cache for build and dependencies
      uses: actions/cache@v2
      id: cache
      with:
        path: |
          node_modules
          **/node_modules
          **/lib
          **/*.tsbuildinfo
        key: ${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}

    #
    # Remove buildcache infos if src files have changed
    #
    - name: Remove buildcache infos
      uses: hokify/remove-buildcache-action@v1
      with:
        changed-files: ${{ steps.filter.outputs.packages_files }}
        tsBuildInfoFile: 'packages/core-design-system/tsconfig.build.tsbuildinfo'

    - name: Install dependencies
      run: yarn

  lint:
    runs-on: ubuntu-latest
    needs: install-dependencies

    strategy:
      matrix:
        node-version: [14.x]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}

    #
    # detect what has changed (we need this later on)
    #
    - uses: dorny/paths-filter@v2
      id: filter
      with:
        list-files: 'json'
        filters: |
          packages:
            - 'packages/**'

    #
    # restore modified time of files via git-restore-mtime
    #
    - name: Restore mtime for git checkout
      run: sudo apt install git-restore-mtime && sudo curl -o /usr/lib/git-core/git-restore-mtime https://raw.githubusercontent.com/MestreLion/git-tools/v2020.09/git-restore-mtime && git restore-mtime

    #
    # Cache node_modules, and ts build output
    #
    - name: Setup cache for build and dependencies
      uses: actions/cache@v2
      id: cache
      with:
        path: |
          node_modules
          **/node_modules
          **/lib
          **/*.tsbuildinfo
        key: ${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}

    #
    # Remove buildcache infos if src files have changed
    #
    - name: Remove buildcache infos
      uses: hokify/remove-buildcache-action@v1
      with:
        changed-files: ${{ steps.filter.outputs.packages_files }}
        tsBuildInfoFile: 'packages/core-design-system/tsconfig.build.tsbuildinfo'

    - name: Install dependencies
      run: yarn

    - name: Lint
      run: yarn lint

