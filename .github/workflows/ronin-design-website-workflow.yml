#
# Github Workflow config file
#
# - reference: https://docs.github.com/en/actions/reference/workflow-syntax-for-github-actions
#

name: ronin-design-website

on:
  push:
    paths:
      - '.github/workflows/ronin-design-website-workflow.yml'
      - '**/package.json'
      - '**/package-lock.json'
      - '**/yarn.lock'
      - 'packages/core-*/**/*'
      - 'packages/ronin-*/**/*'
    branches:
      - dev
      - master
      - release
  pull_request:

env:
  #
  # Debugging
  #
  DEBUG: 'newrade:*'
  ACTIONS_STEP_DEBUG: true
  #
  # Node
  #
  NODE_OPTIONS: '--max-old-space-size=4096'
  #
  # NVM
  #
  NVM_NODE_VERSION: ${{ secrets.NVM_NODE_VERSION }}
  #
  # Repo
  #
  MASTER_GIT_HOST: github.com
  MASTER_REPO_ORG: newrade
  MASTER_REPO_NAME: newrade-core
  PROJECT_GIT_HOST: github.com
  PROJECT_REPO_ORG: newrade
  PROJECT_REPO_NAME: newrade
  #
  # App
  #
  APP_DOMAIN: ronin-design-website.com
  APP_SUBDOMAIN: ''

jobs:

  build-test-deploy:

    runs-on: self-hosted

    strategy:
      matrix:
        node-version: [14.x]

    steps:
    - name: Cancel Previous Runs
      uses: styfle/cancel-workflow-action@0.9.0
      with:
        all_but_latest: false
        access_token: ${{ github.token }}

    - name: Inject Github slug/short variables
      uses: rlespinasse/github-slug-action@v3.x

    - name: Checkout
      uses: actions/checkout@v2
      with:
        clean: false

    - name: Set up Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}

    - name: Set up yarn
      run: npm install --global yarn && yarn --version

    - name: Check NodeJS Options
      run: echo $NODE_OPTIONS && node -e 'console.log(`node heap limit = ${require("v8").getHeapStatistics().heap_size_limit / (1024 * 1024)} Mb`)'

    - name: Set the env variable depending on the branch
      uses: ./packages/core-github-actions/built/set-app-env

    - name: Install dependencies and build core packages
      run: yarn --prefer-offline --frozen-lockfile

    - name: Clean
      run: yarn lerna:clean --scope @newrade/ronin-*

    - name: Lint Src Files
      run: yarn eslint ./packages/ronin-*/src/ --ext ts,tsx

    - name: Build ronin-design-system
      run: yarn lerna:build --scope @newrade/ronin-design-system

    - name: Run unit tests
      run: yarn lerna:test --scope @newrade/ronin-*

    - name: Build
      run: yarn lerna:build --scope @newrade/ronin-design-website

    - name: Deploy
      if: ${{ env.APP_CI_DEPLOY }}
      uses: amondnet/vercel-action@v20
      with:
        github-comment: false
        scope: ${{ secrets.VERCEL_SCOPE }}
        vercel-token: ${{ secrets.VERCEL_TOKEN }}
        github-token: ${{ secrets.GITHUB_TOKEN }}
        vercel-args: 'public'
        vercel-org-id: ${{ secrets.VERCEL_ORG_ID}}
        vercel-project-id: prj_DXOImm0Oa2WZwvnUYjlXbMM8Vtyq
        working-directory: ./packages/ronin-design-website
        # alias-domains: |
        #   ${{ env.APP_HOST }}


